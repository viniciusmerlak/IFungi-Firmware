# IFungi - Estufa Automatizada para Cogumelos

![IFungi](https://img.shields.io/badge/IFungi-Automated%20Mushroom%20Greenhouse-brightgreen)
![Platform](https://img.shields.io/badge/Platform-ESP32-0078D7)
![Framework](https://img.shields.io/badge/Framework-Arduino%20PlatformIO-00979D)
![Database](https://img.shields.io/badge/Database-Firebase-FFCA28)

O IFungi √© um sistema completo de estufa automatizada para cultivo de cogumelos que controla automaticamente fatores abi√≥ticos como temperatura, umidade, ilumina√ß√£o e qualidade do ar.

## üåü Funcionalidades

- **Controle Clim√°tico Autom√°tico**: Regula temperatura com pastilha Peltier (aquecimento/resfriamento)
- **Gest√£o de Umidade**: Acionamento autom√°tico de umidificador
- **Ilumina√ß√£o Controlada**: Barra de LEDs com intensidade ajust√°vel
- **Monitoramento de Gases**: Sensores de CO‚ÇÇ, CO e TVOC
- **Conex√£o WiFi**: Configura√ß√£o f√°cil via modo AP
- **Integra√ß√£o Firebase**: Dados em tempo real e controle remoto
- **Sistema de Seguran√ßa**: Timeout autom√°tico para prote√ß√£o da Peltier
- **Heartbeat**: Status online/offline em tempo real
- **Interface Web**: Configura√ß√£o local via servidor web integrado

## üõ†Ô∏è Hardware

### Componentes Principais
- **Microcontrolador**: ESP32
- **Sensores**:
  - DHT22 (Temperatura e Umidade)
  - CCS811 (CO‚ÇÇ e TVOC)
  - MQ-7 (CO)
  - LDR (Sensor de Luz)
- **Atuadores**:
  - Pastilha Peltier (Controle de temperatura)
  - M√≥dulo de 4 Rel√©s
  - Umidificador
  - Exaustor
  - Barra de LEDs
- **Alimenta√ß√£o**: Fonte 12V para rel√©s e Peltier

### Esquema de Liga√ß√£o
| Componente       | Pino ESP32 |
|------------------|------------|
| DHT22           | GPIO33     |
| CCS811          | I2C (SDA/SCL) |
| MQ-7            | GPIO32     |
| LDR             | GPIO34     |
| LED Strip       | GPIO4      |
| Rele 1 (Peltier) | GPIO23     |
| Rele 2 (Peltier) | GPIO14     |
| Rele 3 (Umidificador) | GPIO18  |
| Rele 4 (Exaustor) | GPIO19    |

## üì¶ Depend√™ncias

- [FirebaseESP32](https://github.com/mobizt/Firebase-ESP32)
- [DHT Sensor Library](https://github.com/adafruit/DHT-sensor-library)
- [Adafruit_CCS811](https://github.com/adafruit/Adafruit_CCS811)
- [ArduinoJSON](https://github.com/bblanchon/ArduinoJson)
- [QRCode](https://github.com/ricmoo/QRCode)

## ‚öôÔ∏è Configura√ß√£o

### 1. Pr√©-requisitos
- Conta no [Firebase](https://firebase.google.com/)
- Arduino IDE ou PlatformIO
- App React Native (separado)

### 2. Configura√ß√£o do Firebase
1. Crie um projeto no Firebase Console
2. Ative o Authentication (Email/Senha)
3. Crie um Realtime Database
4. Anote a API Key e Database URL

### 3. Instala√ß√£o
```bash
# Clone o reposit√≥rio
git clone https://github.com/seu-usuario/IFungi.git

# Abra no PlatformIO ou Arduino IDE
cd IFungi
```

### 4. Configura√ß√£o Inicial
1. Conecte-se ao AP `IFungi-Config` (senha: `config1234`)
2. Acesse `http://192.168.4.1`
3. Configure a rede WiFi
4. Insira as credenciais do Firebase
5. A estufa se registrar√° automaticamente

## üöÄ Uso

### Controle Autom√°tico
O sistema opera automaticamente baseado nos setpoints:
- **Temperatura**: 20-30¬∞C (ajust√°vel)
- **Umidade**: 60-80% (ajust√°vel)
- **Luminosidade**: 5000 lux (ajust√°vel)

### Controle Manual via App
O aplicativo React Native permite:
- Visualizar dados em tempo real
- Ajustar setpoints remotamente
- Controlar atuadores manualmente
- Verificar status de conex√£o

### Estrutura de Dados no Firebase
```json
{
  "estufas": {
    "IFUNGI-MAC-ADDRESS": {
      "sensores": {
        "temperatura": 25.6,
        "umidade": 70.2,
        "co2": 450,
        "co": 2,
        "luminosidade": 3200
      },
      "atuadores": {
        "rele1": true,
        "rele2": false,
        "rele3": true,
        "rele4": false,
        "leds": {
          "ligado": true,
          "watts": 200
        }
      },
      "setpoints": {
        "lux": 5000,
        "tMax": 30.0,
        "tMin": 20.0,
        "uMax": 80.0,
        "uMin": 60.0
      },
      "status": {
        "online": true,
        "lastHeartbeat": 1645637890123,
        "ip": "192.168.1.100"
      }
    }
  }
}
```

## üîß Personaliza√ß√£o

### Ajustar Setpoints
Modifique os valores padr√£o em `ActuatorController.cpp`:
```cpp
void ActuatorController::aplicarSetpoints(int lux, float tMin, float tMax, float uMin, float uMax) {
    luxSetpoint = lux;
    tempMin = tMin;
    tempMax = tMax;
    umidMin = uMin;
    umidMax = uMax;
}
```

### Modificar Tempos de Seguran√ßa
Ajuste os tempos de opera√ß√£o e cooldown no header:
```cpp
const unsigned long tempoOperacao = 10000;  // 10 segundos opera√ß√£o
const unsigned long tempoCooldown = 10000;  // 10 segundos cooldown
```

## üìã Protocolo de Comunica√ß√£o

### Heartbeat
A estufa envia heartbeat a cada 30 segundos:
```json
{
  "online": true,
  "lastHeartbeat": 1645637890123,
  "ip": "192.168.1.100"
}
```

### Comandos
O aplicativo pode enviar comandos para:
- Controlar rel√©s individualmente
- Ajustar intensidade dos LEDs
- Modificar setpoints

## üêõ Solu√ß√£o de Problemas

### Erros Comuns
1. **Falha de conex√£o WiFi**: Verifique as credenciais salvas
2. **Autentica√ß√£o Firebase**: Confirme email e senha
3. **Sensor n√£o responde**: Verifique as conex√µes

### Logs de Depura√ß√£o
O sistema emite logs detalhados pela porta serial (115200 baud):
```
[ATUADOR] Temperatura abaixo (19.5 < 20.0), aquecendo
[PELTIER] Modo aquecimento (com timeout)
[SEGURAN√áA] Tempo de opera√ß√£o excedido, iniciando cooldown
```

## ü§ù Contribui√ß√£o

Contribui√ß√µes s√£o bem-vindas! Sinta-se √† vontade para:

1. Fazer um fork do projeto
2. Criar uma branch para sua feature (`git checkout -b feature/AmazingFeature`)
3. Commit suas mudan√ßas (`git commit -m 'Add some AmazingFeature'`)
4. Push para a branch (`git push origin feature/AmazingFeature`)
5. Abrir um Pull Request

## üìÑ Licen√ßa

Este projeto est√° sob a licen√ßa MIT. Veja o arquivo [LICENSE](LICENSE) para detalhes.

## üë• Autores

- **Seu Nome** - *Desenvolvimento inicial* - [SeuGitHub](https://github.com/seu-usuario)

## üôå Agradecimentos

- IFPR Campus Quedas do Igua√ßu
- Orientadores do projeto
- Contribuidores do c√≥digo aberto

---

**IFungi** - Cultivo inteligente de cogumelos üå±üçÑ

<<<<<<< HEAD
Para mais informa√ß√µes, visite nossa [Wiki](https://github.com/seu-usuario/IFungi/wiki) ou abra uma [issue](https://github.com/seu-usuario/IFungi/issues).
=======
Para mais informa√ß√µes, visite nossa [Wiki](https://github.com/seu-usuario/IFungi/wiki) ou abra uma [issue](https://github.com/seu-usuario/IFungi/issues).
>>>>>>> 257cfe9e5b6c758ce14c62f16e3ad7fbf635c842
